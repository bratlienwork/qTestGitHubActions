# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: push
permissions:
 contents: write
jobs:
 build:
  runs-on: ubuntu-latest
  permissions: write-all
  steps:
      - name: Checkout-step
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven    
      - uses: actions/checkout@v3
      - name: Build and Run Tests
        if: success() || failure() # always run even if the previous step fails
        #run: mvn --batch-mode --update-snapshots package
        run: |
          #mvn test
          mvn --batch-mode --update-snapshots package
          mkdir -p results        
      - name: Loop_Thru_Results_files
      # Loop thru all xml file in the surefire-reports base64url the file send to pulse  (note base64 creates + base64 creates with -)
        if: success() || failure() # always run even if the previous step fails
        env:
         qTestProject: ${{ secrets.PROJECTID }}
         qTestPULSEURL: ${{ secrets.PULSEURL }}
         qTestTESTCYCLE: ${{ secrets.TESTCYCLE }}
         qTestUID: ${{ secrets.QTEST_USERID }}
         qTestPAss: ${{ secrets.QTEST_PASSWORD }}
        #To protect the url projectid and test cycle create repository secrets for each and store the values there
        # link to https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository
        run: |
           echo -e Start LOGON___________________________________________________________
           Logon_RESPONSE=$(curl ${{secrets.LOG_IN_URL}} -H "accept: application/json" -H "Authorization: Basic cXRlc3QtYXBpOg==" -H "content-type: application/x-www-form-urlencoded" -d "grant_type=password" -d "username=p.bratlien%40tricentis.com" -d "password=Travelport1!")
           access_token=$(echo $Logon_RESPONSE | awk -F\" '{print $4}' )
           echo $Logon_RESPONSE
           echo $access_token
           echo -e END LOGON___________________________________________________________
           for file in $( find ./target/surefire-reports -type f -name "*.xml")
           do
             echo -e ___________________________________________________________
             echo -e $file
             curl --request POST $qTestPULSEURL -d "projectId=$qTestProject" -d "testcycle=$qTestTESTCYCLE" -d "result=$(echo $(cat $file) | basenc --base64url | tr -d \\n)"             
             echo -e ___________________________________________________________
           done         
          
      - name: Upload results
        if: success() || failure() # always run even if the previous step fails
        uses: actions/upload-artifact@v3
        with:
          name: Result OutPut
          path: ./target/surefire-reports # or path/to/artifact
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
    
